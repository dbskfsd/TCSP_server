<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.obsidian.tcsp.dao.RoutepointMapper">
  <resultMap id="BaseResultMap" type="org.obsidian.tcsp.model.Routepoint">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="'index'" jdbcType="INTEGER" property="index" />
    <result column="route_id" jdbcType="INTEGER" property="routeId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="longitude" jdbcType="DOUBLE" property="longitude" />
    <result column="latitude" jdbcType="DOUBLE" property="latitude" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="org.obsidian.tcsp.model.Routepoint">
    <result column="feel" jdbcType="LONGVARCHAR" property="feel" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, "index", route_id, name, longitude, latitude
  </sql>
  <sql id="Blob_Column_List">
    feel
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="org.obsidian.tcsp.model.RoutepointExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from routepoint
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="org.obsidian.tcsp.model.RoutepointExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from routepoint
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="org.obsidian.tcsp.model.RoutepointExample">
    delete from routepoint
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.obsidian.tcsp.model.Routepoint">
    insert into routepoint (id, `index`, route_id,
      `name`, longitude, latitude,
      feel)
    values (#{id,jdbcType=INTEGER}, #{index,jdbcType=INTEGER}, #{routeId,jdbcType=INTEGER}, 
      #{name,jdbcType=VARCHAR}, #{longitude,jdbcType=DOUBLE}, #{latitude,jdbcType=DOUBLE}, 
      #{feel,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.obsidian.tcsp.model.Routepoint">
    insert into routepoint
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="index != null">
        `index`,
      </if>
      <if test="routeId != null">
        route_id,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="longitude != null">
        longitude,
      </if>
      <if test="latitude != null">
        latitude,
      </if>
      <if test="feel != null">
        feel,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="index != null">
        #{index,jdbcType=INTEGER},
      </if>
      <if test="routeId != null">
        #{routeId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null">
        #{longitude,jdbcType=DOUBLE},
      </if>
      <if test="latitude != null">
        #{latitude,jdbcType=DOUBLE},
      </if>
      <if test="feel != null">
        #{feel,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.obsidian.tcsp.model.RoutepointExample" resultType="java.lang.Long">
    select count(*) from routepoint
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update routepoint
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.index != null">
        "index" = #{record.index,jdbcType=INTEGER},
      </if>
      <if test="record.routeId != null">
        route_id = #{record.routeId,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.longitude != null">
        longitude = #{record.longitude,jdbcType=DOUBLE},
      </if>
      <if test="record.latitude != null">
        latitude = #{record.latitude,jdbcType=DOUBLE},
      </if>
      <if test="record.feel != null">
        feel = #{record.feel,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update routepoint
    set id = #{record.id,jdbcType=INTEGER},
      "index" = #{record.index,jdbcType=INTEGER},
      route_id = #{record.routeId,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      longitude = #{record.longitude,jdbcType=DOUBLE},
      latitude = #{record.latitude,jdbcType=DOUBLE},
      feel = #{record.feel,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update routepoint
    set id = #{record.id,jdbcType=INTEGER},
      "index" = #{record.index,jdbcType=INTEGER},
      route_id = #{record.routeId,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      longitude = #{record.longitude,jdbcType=DOUBLE},
      latitude = #{record.latitude,jdbcType=DOUBLE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>